description: Automation document for test manager
schemaVersion: '0.3'
assumeRole: '{{AutomationAssumeRole}}'
outputs:
  - WaitForManualApproval.ApprovalStatus
parameters:
  Mode:
    type: String
    allowedValues:
      - Automated
      - Manual
    description: (Required) Specifies the mode of execution (automated or manual)
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
  Approvers:
    type: StringList
    description: (Required) The ARN of the role that allows other accounts to approve the workload.
  Message:
    type: String
    description: (Required) The message that will be shown to the approvers.
  NotificationArn:
    type: String
    description: (Required) The ARN of an Amazon SNS topic for Automation approvals.
  Workload:
    type: String
    description: (Required) Workload name
  AccountId:
    type: String
    description: (Required) Account where the workload resides
  InstanceIds:
    type: String
    description: (Required) Instance ids of the workload
mainSteps:
  - name: CheckMode
    action: 'aws:branch'
    inputs:
      Choices:
        - NextStep: WaitForManualApproval
          Variable: '{{Mode}}'
          StringEquals: Manual
    description: Checks if the mode is manual or automated
  - name: WaitForManualApproval
    action: 'aws:approve'
    onFailure: 'step:InvokeLambdaFunction'
    inputs:
      Approvers: '{{Approvers}}'
      Message: '{{Message}}'
      NotificationArn: '{{NotificationArn}}'
      MinRequiredApprovals: 1
    description: Waits for an owner to manually approve
    nextStep: InvokeLambdaFunction
  - name: InvokeLambdaFunction
    action: 'aws:invokeLambdaFunction'
    inputs:
      FunctionName: invoke_main
      Payload: '{"accountId" : "{{AccountId}}","workload": "{{Workload}}", "executionId": "{{automation:EXECUTION_ID}}", "instanceIds": "{{InstanceIds}}"}'
